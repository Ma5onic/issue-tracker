@model PagedList.IPagedList<IssueTracker.ViewModels.IssueIndexViewModel>
@using Microsoft.AspNet.Identity
@using PagedList.Mvc;

@section AddToHead {
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
}

@{
    ViewBag.Title = "Index";
}

<ul class="nav nav-tabs">
    @if (Request.RawUrl.Contains("?SearchAssignee="))
    {
        <li role="presentation"><a href="@Url.Action("Index", "Issues")">All</a></li>
        <li role="presentation" class="active"><a href="?SearchAssignee=@User.Identity.GetUserId()">Assigned to me</a></li>
        <li role="presentation"><a href="?SearchReporter=@User.Identity.GetUserId()">Created by me</a></li>
    }
    else if (Request.RawUrl.Contains("?SearchReporter="))
    {
        <li role="presentation"><a href="@Url.Action("Index", "Issues")">All</a></li>
        <li role="presentation"><a href="?SearchAssignee=@User.Identity.GetUserId()">Assigned to me</a></li>
        <li role="presentation" class="active"><a href="?SearchReporter=@User.Identity.GetUserId()">Created by me</a></li>
    }
    else
    {
        <li role="presentation" class="active"><a href="@Url.Action("Index", "Issues")">All</a></li>
        <li role="presentation"><a href="?SearchAssignee=@User.Identity.GetUserId()">Assigned to me</a></li>
        <li role="presentation"><a href="?SearchReporter=@User.Identity.GetUserId()">Reported by me</a></li>
    }
    <li style="float: right; padding-right: 10px;">
        @Html.ActionLink("+ Add", "Create", null, new {@class = "btn btn-primary action"})
    </li>
</ul>

<br/><br/>

@using (Html.BeginForm())
{
    <table class="search-table">
        <tr>
            <td width="70%" colspan="2">
                @Html.TextBox("SearchName", null, new { @class = "form-control", @placeholder = "Name" })
            </td>
            <td width="30%" colspan="3">
                @Html.DropDownList("SearchState", null, "- Select state -", new { @class = "form-control" })
            </td>
        </tr>
        <tr>
            <td width="30%">
                @Html.DropDownList("SearchAssignee", null, "- Select assignee -", new { @class = "form-control" })
            </td>
            <td width="30%">
                @Html.DropDownList("SearchReporter", null, "- Select reporter -", new { @class = "form-control" })
            </td>
            <td width="30%">
                @Html.DropDownList("SearchProject", null, "- Select project -", new { @class = "form-control" })
            </td>
            <td width="5%" class="right-align">
                <input type="submit" value="Search" class="btn btn-primary" />
            </td>
            <td width="5%" class="right-align">
                <input type="reset" value="Clear" class="btn btn-danger" />
            </td>
        </tr>
    </table>
}

<br />

@if (Model.Count == 0)
{
    <i>No issue found.</i>
}
else
{
    <h2>Issues</h2>

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Summary", "Index", new { sort = ViewBag.SummarySort })
            </th>
            <th>
                @Html.ActionLink("Assignee", "Index", new { sort = ViewBag.AssigneeSort })
            </th>
            <th>
                @Html.ActionLink("Created", "Index", new { sort = ViewBag.CreatedSort })
            </th>
            <th>
                @Html.ActionLink("Reporter", "Index", new { sort = ViewBag.ReporterSort })
            </th>
            <th>
                @Html.ActionLink("Project", "Index", new { sort = ViewBag.ProjectSort })
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sort = ViewBag.StatusSort })
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink(Html.DisplayFor(modelItem => item.Name).ToString(), "Details", "Issues", new { id = item.Code }, null)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Assignee.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reporter.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Title)
                </td>
                <td>
                    <span class="label state" style="background-color: @Html.DisplayFor(modelItem => item.State.Colour);">@Html.DisplayFor(modelItem => item.State.Title)</span>
                </td>
            </tr>
        }
    </table>
    <br />

    <Text>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</Text>
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
}