@model PagedList.IPagedList<IssueTracker.ViewModels.IssueViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>All Issues</h2>

<p>
    @Html.ActionLink("Create New Issue", "Create")
</p>

<table class="table">
    <tr>
        <th>
            Summary
        </th>
        <th>
            Assigneee
        </th>
        <th>
            Created
        </th>
        <th>
            Reporter
        </th>
        <th>
            Project
        </th>
        <th>
            Status
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(Html.DisplayFor(modelItem => item.Name).ToString(), "Details", "Issues", new { id = item.Code }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Assignee.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reporter.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Title)
            </td>
            <td>
                <span class="label state" style="background-color: @Html.DisplayFor(modelItem => item.State.Colour);">@Html.DisplayFor(modelItem => item.State.Title)</span>
            </td>
        </tr>
    }
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))