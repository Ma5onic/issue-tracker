@model IssueTracker.ViewModels.IssueDetailViewModel

@{
    ViewBag.Title = "Details";
}
<div>
    <br/>
    <p>
        @Html.DisplayNameFor(model => model.Issue.Project):
        @Html.ActionLink(Model.Issue.Project.Title, "Details", "Projects", new {id = Model.Issue.Project.Code}, null)
    </p>
    <hr />
    <h2>@Html.DisplayFor(model => model.Issue.Name)</h2>
    <div class="text-danger">@ViewBag.ErrorMessage</div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Issue.Id })
    @foreach (var item in Model.StateWorkflows)
    {
        <strong>
            | @Html.ActionLink(@Html.DisplayFor(modelItem => item.ToState.Title).ToString(), "ChangeStatus", new { issueId = Model.Issue.Id, to = item.ToStateId })
        </strong>
    }
    <h4>Details</h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Issue.Created):
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Issue.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Issue.State):
        </dt>
        <dd>
            <span class="label state" style="background-color: @Html.DisplayFor(model => model.Issue.State.Colour);">@Html.DisplayFor(model => model.Issue.State.Title)</span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Issue.Reporter):
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Issue.Reporter.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Issue.Assignee):
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Issue.Assignee.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Issue.Description):
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Issue.Description)
        </dd>
    </dl>

    <h4>Comments</h4>
    @if (Model.Comments.ToList().Count == 0)
    {
        <i>No comments</i>
        <br /><br />
    }
    else
    {
        <table class="table">
            @foreach (var item in Model.Comments)
            {
                <tr>
                    <td style="font-weight: bold">@item.User.UserName</td>
                    <td class="one-line">@item.Posted</td>
                </tr>
                <tr>
                    <td>@Html.Raw(HttpUtility.HtmlDecode(@item.Text))</td>
                    <td>
                        @if (ViewBag.LoggedUser.Id == item.AuthorId)
                        {
                            @Html.ActionLink("Edit", "Edit", "Comments", new { id = item.Id }, null)
                        }      
                        
                        @if (ViewBag.IsUserAdmin)
                        {
                            @:|
                            @Html.ActionLink("Delete", "Delete", "Comments", new { id = item.Id }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    }
    @using (Html.BeginForm("Create", "Comments", new { id = Model.Issue.Id }))
    {
        @Html.AntiForgeryToken()         
        @Html.TextArea("Text", new { @class = "form-control" })           
        @Html.Hidden("IssueId", Model.Issue.Id)
        <input class="btn btn-default dropdown-toggle" type="submit" value="Comment" />
    }  
</div>

@section Scripts {
    @Scripts.Render("~/bundles/ckeditor")
    @Scripts.Render("~/bundles/ckeditor-replace")
}